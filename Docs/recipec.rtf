{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red152\green152\blue217;\red192\green192\blue192;\red128\green128\blue255;\red170\green170\blue240;\red0\green128\blue128;\red107\green153\blue153;\red128\green0\blue0;\red172\green89\blue89;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red64\green64\blue128;\red133\green133\blue172;\red128\green255\blue255;\red55\green55\blue55;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16 \cb3\cf16 #include "recipe.h"
\par \cb3\cf14\b using namespace \b0\cb3\cf16\b std\b0\cb3\cf25 ;
\par 
\par \cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 Recipe\cb3\cf25 ()\{\}
\par 
\par \cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 Recipe\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 ) : \cb1\cf0 name\cb3\cf25 (\cb1\cf0 r\cb3\cf25 .\cb1\cf0 name\cb3\cf25 ), \cb1\cf0 ingredients\cb3\cf25 (\cb1\cf0 r\cb3\cf25 .\cb1\cf0 ingredients\cb3\cf25 ), \cb1\cf0 prepTime\cb3\cf25 (\cb1\cf0 r\cb3\cf25 .\cb1\cf0 prepTime\cb3\cf25 ), \cb1\cf0 procedure\cb3\cf25 (\cb1\cf0 r\cb3\cf25 .\cb1\cf0 procedure\cb3\cf25 ), \cb1\cf0 author\cb3\cf25 (\cb1\cf0 r\cb3\cf25 .\cb1\cf0 author\cb3\cf25 ), \cb1\cf0 category\cb3\cf25 (\cb1\cf0 r\cb3\cf25 .\cb1\cf0 category\cb3\cf25 )\{\}
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 setName\cb3\cf25 (\cb3\cf14\b const \b0\cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string\b0\cb3\cf25 & \cb1\cf0 s\cb3\cf25 )
\par \{
\par     \cb1\cf0 name \cb3\cf25 = \cb1\cf0 s\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 setIngredients\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 SLList\cb3\cf25 <\cb1\cf0 Ingredient\cb3\cf25 >& \cb1\cf0 i\cb3\cf25 )
\par \{
\par     \cb1\cf0 ingredients \cb3\cf25 = \cb1\cf0 i\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 setPrepTime\cb3\cf25 (\cb3\cf14\b const int\b0\cb3\cf25 & \cb1\cf0 t\cb3\cf25 )
\par \{
\par     \cb1\cf0 prepTime \cb3\cf25 = \cb1\cf0 t\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 setProcedure\cb3\cf25 (\cb3\cf14\b const \b0\cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string\b0\cb3\cf25 & \cb1\cf0 s\cb3\cf25 )
\par \{
\par     \cb1\cf0 procedure \cb3\cf25 = \cb1\cf0 s\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 setAuthor\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Name\cb3\cf25 & \cb1\cf0 n\cb3\cf25 )
\par \{
\par     \cb1\cf0 author \cb3\cf25 = \cb1\cf0 n\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b void \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 setCategory\cb3\cf25 (\cb3\cf14\b const \b0\cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string\b0\cb3\cf25 & \cb1\cf0 s\cb3\cf25 )
\par \{
\par     \cb1\cf0 category \cb3\cf25 = \cb1\cf0 s\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf16\b string \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 getName\cb3\cf25 () \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb1\cf0 name\cb3\cf25 ;
\par \}
\par 
\par \cb1\cf0 SLList\cb3\cf25 <\cb1\cf0 Ingredient\cb3\cf25 > \cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 getIngredients\cb3\cf25 () \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb1\cf0 ingredients\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b int \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 getprepTime\cb3\cf25 () \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb1\cf0 prepTime\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf16\b string \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 getProcedure\cb3\cf25 () \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb1\cf0 procedure\cb3\cf25 ;
\par \}
\par 
\par \cb1\cf0 Name Recipe\cb3\cf25 ::\cb1\cf0 getAuthor\cb3\cf25 () \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb1\cf0 author\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf16\b string \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 getCategory\cb3\cf25 () \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb1\cf0 category\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf16\b string \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 toString\cb3\cf25 () \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf16\b string \b0\cb1\cf0 result\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 "Nombre: "\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb1\cf0 name\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 " | "\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 "Categoria: "\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb1\cf0 category\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 " | "\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 "Autor: "\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb1\cf0 author\cb3\cf25 .\cb1\cf0 toString\cb3\cf25 ();
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 " | "\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 "Tiempo de preparacion: "\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb1\cf0 to_string\cb3\cf25 (\cb1\cf0 prepTime\cb3\cf25 );
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 " minutos"\cb3\cf25 ;
\par     \cb3\cf14\b return \b0\cb1\cf0 result\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf16\b string \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 displayRecipe\cb3\cf25 () \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf16\b string \b0\cb1\cf0 result\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb1\cf0 toString\cb3\cf25 ();
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 "\\nIngredientes:\\n"\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb1\cf0 ingredients\cb3\cf25 .\cb1\cf0 toString\cb3\cf25 ();
\par     \cb1\cf0 result \cb3\cf25 += \cb3\cf20 "\\nProcedimiento:\\n"\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 += \cb1\cf0 procedure\cb3\cf25 ;
\par     \cb3\cf14\b return \b0\cb1\cf0 result\cb3\cf25 ;
\par \}
\par 
\par \cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 Recipe\cb3\cf25 ::\cb3\cf14\b operator\b0\cb3\cf25 =(\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 )
\par \{
\par     \cb1\cf0 name \cb3\cf25 = \cb1\cf0 r\cb3\cf25 .\cb1\cf0 name\cb3\cf25 ;
\par     \cb1\cf0 ingredients \cb3\cf25 = \cb1\cf0 r\cb3\cf25 .\cb1\cf0 ingredients\cb3\cf25 ;
\par     \cb1\cf0 prepTime \cb3\cf25 = \cb1\cf0 r\cb3\cf25 .\cb1\cf0 prepTime\cb3\cf25 ;
\par     \cb1\cf0 procedure \cb3\cf25 = \cb1\cf0 r\cb3\cf25 .\cb1\cf0 procedure\cb3\cf25 ;
\par     \cb1\cf0 author \cb3\cf25 = \cb1\cf0 r\cb3\cf25 .\cb1\cf0 author\cb3\cf25 ;
\par     \cb1\cf0 category \cb3\cf25 = \cb1\cf0 r\cb3\cf25 .\cb1\cf0 category\cb3\cf25 ;
\par     \cb3\cf14\b return \b0\cb3\cf25 *\cb3\cf14\b this\b0\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b bool \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb3\cf14\b operator\b0\cb3\cf25 ==(\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 ) \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb3\cf25 *\cb3\cf14\b this \b0\cb3\cf25 == \cb1\cf0 r\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b bool \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb3\cf14\b operator\b0\cb3\cf25 !=(\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 ) \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb3\cf25 *\cb3\cf14\b this \b0\cb3\cf25 != \cb1\cf0 r\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b bool \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb3\cf14\b operator\b0\cb3\cf25 <(\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 ) \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb3\cf25 *\cb3\cf14\b this \b0\cb3\cf25 < \cb1\cf0 r\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b bool \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb3\cf14\b operator\b0\cb3\cf25 >(\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 ) \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb3\cf25 *\cb3\cf14\b this \b0\cb3\cf25 > \cb1\cf0 r\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b bool \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb3\cf14\b operator\b0\cb3\cf25 <=(\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 ) \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb3\cf25 (*\cb3\cf14\b this \b0\cb3\cf25 < \cb1\cf0 r\cb3\cf25 ) \cb1\cf0 or \cb3\cf25 (*\cb3\cf14\b this \b0\cb3\cf25 == \cb1\cf0 r\cb3\cf25 );
\par \}
\par 
\par \cb3\cf14\b bool \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb3\cf14\b operator\b0\cb3\cf25 >=(\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 ) \cb3\cf14\b const
\par \b0\cb3\cf25 \{
\par     \cb3\cf14\b return \b0\cb3\cf25 (*\cb3\cf14\b this \b0\cb3\cf25 > \cb1\cf0 r\cb3\cf25 ) \cb1\cf0 or \cb3\cf25 (*\cb3\cf14\b this \b0\cb3\cf25 == \cb1\cf0 r\cb3\cf25 );
\par \}
\par 
\par \cb3\cf14\b int \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 compareByName\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r1\cb3\cf25 , \cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r2\cb3\cf25 )
\par \{
\par     \cb3\cf14\b int \b0\cb1\cf0 result\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 = \cb1\cf0 r1\cb3\cf25 .\cb1\cf0 name\cb3\cf25 .\cb1\cf0 compare\cb3\cf25 (\cb1\cf0 r2\cb3\cf25 .\cb1\cf0 name\cb3\cf25 );
\par     \cb3\cf14\b return \b0\cb1\cf0 result\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b int \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 compareByPrepTime\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r1\cb3\cf25 , \cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r2\cb3\cf25 )
\par \{
\par     \cb3\cf14\b return \b0\cb1\cf0 r1\cb3\cf25 .\cb1\cf0 prepTime \cb3\cf25 - \cb1\cf0 r2\cb3\cf25 .\cb1\cf0 prepTime\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf14\b int \b0\cb1\cf0 Recipe\cb3\cf25 ::\cb1\cf0 compareByCategory\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r1\cb3\cf25 , \cb3\cf14\b const \b0\cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r2\cb3\cf25 )
\par \{
\par     \cb3\cf14\b int \b0\cb1\cf0 result\cb3\cf25 ;
\par     \cb1\cf0 result \cb3\cf25 = \cb1\cf0 r1\cb3\cf25 .\cb1\cf0 category\cb3\cf25 .\cb1\cf0 compare\cb3\cf25 (\cb1\cf0 r2\cb3\cf25 .\cb1\cf0 category\cb3\cf25 );
\par     \cb3\cf14\b return \b0\cb1\cf0 result\cb3\cf25 ;
\par \}
\par 
\par \cb1\cf0 ostream\cb3\cf25 & \cb3\cf14\b operator \b0\cb3\cf25 << (\cb1\cf0 ostream\cb3\cf25 & \cb1\cf0 os\cb3\cf25 , \cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 )
\par \{
\par     \cb1\cf0 os \cb3\cf25 << \cb1\cf0 r\cb3\cf25 .\cb1\cf0 name \cb3\cf25 << \cb3\cf16\b endl\b0\cb3\cf25 ;
\par     \cb1\cf0 os \cb3\cf25 << \cb1\cf0 r\cb3\cf25 .\cb1\cf0 category \cb3\cf25 << \cb3\cf16\b endl\b0\cb3\cf25 ;
\par     \cb1\cf0 os \cb3\cf25 << \cb1\cf0 r\cb3\cf25 .\cb1\cf0 author \cb3\cf25 << \cb3\cf16\b endl\b0\cb3\cf25 ;
\par     \cb1\cf0 os \cb3\cf25 << \cb1\cf0 r\cb3\cf25 .\cb1\cf0 prepTime \cb3\cf25 << \cb3\cf16\b endl\b0\cb3\cf25 ;
\par     \cb1\cf0 os \cb3\cf25 << \cb1\cf0 r\cb3\cf25 .\cb1\cf0 ingredients\cb3\cf25 .\cb1\cf0 txtString\cb3\cf25 ();
\par     \cb1\cf0 os \cb3\cf25 << \cb1\cf0 r\cb3\cf25 .\cb1\cf0 procedure\cb3\cf25 ;
\par     \cb3\cf14\b return \b0\cb1\cf0 os\cb3\cf25 ;
\par \}
\par 
\par \cb3\cf16\b istream\b0\cb3\cf25 & \cb3\cf14\b operator \b0\cb3\cf25 >> (\cb3\cf16\b istream\b0\cb3\cf25 & \cb1\cf0 is\cb3\cf25 , \cb1\cf0 Recipe\cb3\cf25 & \cb1\cf0 r\cb3\cf25 )
\par \{
\par     \cb3\cf16\b string \b0\cb1\cf0 auxNameIngredient\cb3\cf25 , \cb1\cf0 myStr\cb3\cf25 ;
\par     \cb1\cf0 Ingredient auxIngredient\cb3\cf25 ;
\par     \cb3\cf14\b int \b0\cb1\cf0 entero\cb3\cf25 ;
\par     \cb3\cf14\b char \b0\cb1\cf0 last\cb3\cf25 ;
\par     \cb1\cf0 r\cb3\cf25 .\cb1\cf0 ingredients\cb3\cf25 .\cb1\cf0 nullify\cb3\cf25 ();
\par 
\par     \cb1\cf0 getline\cb3\cf25 (\cb1\cf0 is\cb3\cf25 , \cb1\cf0 r\cb3\cf25 .\cb1\cf0 name\cb3\cf25 );
\par     \cb3\cf14\b if\b0\cb3\cf25 (\cb1\cf0 r\cb3\cf25 .\cb1\cf0 name\cb3\cf25 .\cb3\cf16\b empty\b0\cb3\cf25 ())\{
\par         \cb3\cf14\b return \b0\cb1\cf0 is\cb3\cf25 ;
\par     \}
\par     \cb1\cf0 getline\cb3\cf25 (\cb1\cf0 is\cb3\cf25 , \cb1\cf0 r\cb3\cf25 .\cb1\cf0 category\cb3\cf25 );
\par     \cb1\cf0 is \cb3\cf25 >> \cb1\cf0 r\cb3\cf25 .\cb1\cf0 author\cb3\cf25 ;
\par 
\par     \cb1\cf0 getline\cb3\cf25 (\cb1\cf0 is\cb3\cf25 , \cb1\cf0 myStr\cb3\cf25 );
\par     \cb1\cf0 entero \cb3\cf25 = \cb1\cf0 stoi\cb3\cf25 (\cb1\cf0 myStr\cb3\cf25 );
\par     \cb1\cf0 r\cb3\cf25 .\cb1\cf0 setPrepTime\cb3\cf25 (\cb1\cf0 entero\cb3\cf25 );
\par 
\par     \cb3\cf14\b do\b0\cb3\cf25 \{
\par         \cb1\cf0 is \cb3\cf25 >> \cb1\cf0 auxIngredient\cb3\cf25 ;
\par         \cb1\cf0 r\cb3\cf25 .\cb1\cf0 ingredients\cb3\cf25 .\cb1\cf0 insertData\cb3\cf25 (\cb1\cf0 r\cb3\cf25 .\cb1\cf0 ingredients\cb3\cf25 .\cb1\cf0 getLastPos\cb3\cf25 (), \cb1\cf0 auxIngredient\cb3\cf25 );
\par         \cb1\cf0 myStr \cb3\cf25 = \cb1\cf0 auxIngredient\cb3\cf25 .\cb1\cf0 getName\cb3\cf25 ();
\par         \cb1\cf0 last \cb3\cf25 = \cb1\cf0 myStr\cb3\cf25 [\cb1\cf0 myStr\cb3\cf25 .\cb1\cf0 length\cb3\cf25 ()-\cb3\cf12 1\cb3\cf25 ];
\par     \}\cb3\cf14\b while\b0\cb3\cf25 (\cb1\cf0 last \cb3\cf25 != \cb3\cf22 ' '\cb3\cf25 );
\par 
\par 
\par 
\par     \cb1\cf0 getline\cb3\cf25 (\cb1\cf0 is\cb3\cf25 , \cb1\cf0 r\cb3\cf25 .\cb1\cf0 procedure\cb3\cf25 );
\par     \cb3\cf14\b return \b0\cb1\cf0 is\cb3\cf25 ;
\par \}
\par }