{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red152\green152\blue217;\red192\green192\blue192;\red128\green128\blue255;\red170\green170\blue240;\red0\green128\blue128;\red107\green153\blue153;\red128\green0\blue0;\red172\green89\blue89;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red64\green64\blue128;\red133\green133\blue172;\red128\green255\blue255;\red55\green55\blue55;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16 \cb3\cf16 #ifndef INGREDIENT_H_INCLUDED
\par #define INGREDIENT_H_INCLUDED
\par #include <string>
\par #include <iostream>
\par 
\par \cb3\cf14\b class \b0\cb1\cf0 Ingredient\cb3\cf25 \{
\par \cb3\cf14\b private\b0\cb3\cf25 :
\par     \cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string \b0\cb1\cf0 name\cb3\cf25 ;
\par     \cb3\cf14\b int \b0\cb1\cf0 quantity\cb3\cf25 ;
\par     \cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string \b0\cb1\cf0 unit\cb3\cf25 ;
\par 
\par \cb3\cf14\b public\b0\cb3\cf25 :
\par     \cb1\cf0 Ingredient\cb3\cf25 ();
\par     \cb1\cf0 Ingredient\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &);
\par 
\par     \cb3\cf14\b void \b0\cb1\cf0 setName\cb3\cf25 (\cb3\cf14\b const \b0\cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string\b0\cb3\cf25 &);
\par     \cb3\cf14\b void \b0\cb1\cf0 setQuantity\cb3\cf25 (\cb3\cf14\b const int\b0\cb3\cf25 &);
\par     \cb3\cf14\b void \b0\cb1\cf0 setUnit\cb3\cf25 (\cb3\cf14\b const \b0\cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string\b0\cb3\cf25 &);
\par 
\par     \cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string \b0\cb1\cf0 getName\cb3\cf25 () \cb3\cf14\b const\b0\cb3\cf25 ;
\par     \cb3\cf14\b int \b0\cb1\cf0 getQuantity\cb3\cf25 () \cb3\cf14\b const\b0\cb3\cf25 ;
\par     \cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string \b0\cb1\cf0 getUnit\cb3\cf25 () \cb3\cf14\b const\b0\cb3\cf25 ;
\par 
\par     \cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string \b0\cb1\cf0 txtString\cb3\cf25 () \cb3\cf14\b const\b0\cb3\cf25 ;
\par     \cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b string \b0\cb1\cf0 toString\cb3\cf25 () \cb3\cf14\b const\b0\cb3\cf25 ;
\par 
\par     \cb1\cf0 Ingredient\cb3\cf25 & \cb3\cf14\b operator \b0\cb3\cf25 = (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &);
\par     \cb3\cf14\b bool operator \b0\cb3\cf25 == (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &) \cb3\cf14\b const\b0\cb3\cf25 ;
\par     \cb3\cf14\b bool operator \b0\cb3\cf25 != (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &) \cb3\cf14\b const\b0\cb3\cf25 ;
\par     \cb3\cf14\b bool operator \b0\cb3\cf25 < (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &) \cb3\cf14\b const\b0\cb3\cf25 ;
\par     \cb3\cf14\b bool operator \b0\cb3\cf25 > (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &) \cb3\cf14\b const\b0\cb3\cf25 ;
\par     \cb3\cf14\b bool operator \b0\cb3\cf25 <= (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &) \cb3\cf14\b const\b0\cb3\cf25 ;
\par     \cb3\cf14\b bool operator \b0\cb3\cf25 >= (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &) \cb3\cf14\b const\b0\cb3\cf25 ;
\par 
\par     \cb3\cf14\b static int \b0\cb1\cf0 compareByName\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &, \cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &);
\par     \cb3\cf14\b static int \b0\cb1\cf0 compareByQuantity\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &, \cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &);
\par     \cb3\cf14\b static int \b0\cb1\cf0 compareByUnit\cb3\cf25 (\cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &, \cb3\cf14\b const \b0\cb1\cf0 Ingredient\cb3\cf25 &);
\par 
\par     \cb3\cf14\b friend \b0\cb3\cf16\b std\b0\cb3\cf25 ::\cb1\cf0 ostream\cb3\cf25 & \cb3\cf14\b operator \b0\cb3\cf25 << (\cb3\cf16\b std\b0\cb3\cf25 ::\cb1\cf0 ostream\cb3\cf25 &, \cb1\cf0 Ingredient\cb3\cf25 &);
\par     \cb3\cf14\b friend \b0\cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b istream\b0\cb3\cf25 & \cb3\cf14\b operator \b0\cb3\cf25 >> (\cb3\cf16\b std\b0\cb3\cf25 ::\cb3\cf16\b istream\b0\cb3\cf25 &, \cb1\cf0 Ingredient\cb3\cf25 &);
\par \};
\par 
\par \cb3\cf16 #endif \cb3\cf4 // INGREDIENT_H_INCLUDED
\par }